{
  "permissions": {
    "allow": [
      "Bash(git rev-parse:*)",
      "Bash(dirname \"$(git rev-parse --git-common-dir)\")",
      "Bash(bash:*)",
      "Bash(git for-each-ref:*)",
      "Bash(git branch:*)",
      "Bash(git push:*)",
      "Bash(git fetch:*)",
      "Bash(git clone:*)",
      "Bash(git --git-dir=.git branch -r)",
      "Bash(GIT_DIR=.git git branch -r)",
      "Bash(ls:*)",
      "Bash(git --git-dir=.git show-ref)",
      "Bash(rm:*)",
      "Bash(/Users/avihu/Projects/git-worktree-workflow/scripts/git-worktree-clone --all-branches avihut:tax-analyzer)",
      "Bash(/Users/avihu/Projects/git-worktree-workflow/scripts/git-worktree-clone --all-branches --quiet avihut:tax-analyzer)",
      "Bash(/Users/avihu/Projects/git-worktree-workflow/scripts/git-worktree-clone avihut:tax-analyzer)",
      "Bash(gh pr view:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue view:*)",
      "Bash(chmod:*)",
      "Bash(mkdir:*)",
      "Bash(/Users/avihu/Projects/git-worktree-workflow/scripts/git-worktree-init test-repo)",
      "Bash(./scripts/git-worktree-init test-repo)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(gh pr create:*)",
      "Bash(gh issue create:*)",
      "Bash(make:*)",
      "Bash(export:*)",
      "Bash(./test_framework.sh:*)",
      "Bash(./test_simple.sh:*)",
      "Bash(./test_checkout.sh)",
      "Bash(gh pr checks:*)",
      "Bash(gh run view:*)",
      "Bash(./test_clone.sh)",
      "Bash(gh pr diff:*)",
      "Bash(cargo:*)",
      "Bash(./target/debug/git-worktree-clone --help)",
      "Bash(./target/release/git-worktree-clone --help)",
      "Bash(./target/release/git-worktree-init --help)",
      "Bash(./scripts/git-worktree-clone --help)",
      "Bash(cp:*)",
      "Bash(./tests/integration/test_simple.sh:*)",
      "Bash(git init:*)",
      "Bash(git worktree:*)",
      "Bash(./test_checkout_branch_from_default.sh:*)",
      "Bash(./test_init.sh:*)",
      "Bash(timeout:*)",
      "Bash(source:*)",
      "Bash(setup)",
      "Bash(test_init_branch_conventions)",
      "Bash(git-worktree-init:*)",
      "Bash(/Users/avihu/Projects/git-worktree-workflow/target/release/git-worktree-init --initial-branch \"feature/init\" test-feature-init)",
      "Bash(/Users/avihu/Projects/git-worktree-workflow/target/release/git-worktree-init --initial-branch \"hotfix_urgent\" test-hotfix)",
      "Bash(./run_tests.sh)",
      "Bash(VERBOSE=1 ./test_checkout.sh)",
      "Bash(VERBOSE=1 make test-integration-checkout)",
      "Bash(VERBOSE=1 ./test_checkout.sh checkout_direnv)",
      "Bash(/Users/avihu/Projects/git-worktree-workflow/debug_direnv_test.sh)",
      "Bash(VERBOSE=1 make test-integration-checkout-branch)",
      "Bash(VERBOSE=1 ./test_checkout_branch.sh)",
      "Bash(VERBOSE=1 make test-integration-checkout-branch-from-default)",
      "Bash(./test_all.sh)",
      "Bash(VERBOSE=1 ./test_prune.sh)",
      "Bash(test_checkout_direnv)",
      "Bash(VERBOSE=1 ./test_checkout_branch_from_default.sh)",
      "Bash(VERBOSE=1 ./test_checkout_branch_from_default.sh checkout_branch_from_default_remote_updates)",
      "Bash(VERBOSE=1 ./test_all.sh)",
      "Bash(./test_checkout_branch.sh)",
      "Bash(find:*)",
      "mcp__github__get_pull_request",
      "mcp__github__get_issue",
      "mcp__github__list_pull_requests",
      "mcp__github__get_me",
      "mcp__github__get_pull_request_files",
      "mcp__github__get_pull_request_diff",
      "Bash(grep:*)",
      "mcp__github__add_issue_comment",
      "mcp__github__search_pull_requests",
      "mcp__github__get_pull_request_comments",
      "mcp__github__get_pull_request_reviews",
      "mcp__github__get_issue_comments",
      "mcp__github__get_pull_request_status",
      "Bash(rg:*)",
      "Bash(mv:*)",
      "Bash(sed:*)",
      "mcp__github__get_pull_request_comments",
      "mcp__github__get_issue_comments",
      "Bash(echo:*)",
      "Bash(rg:*)"
    ],
    "deny": []
  }
}